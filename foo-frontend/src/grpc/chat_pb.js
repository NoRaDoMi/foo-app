// source: chat.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var fintech_code_pb = require('./code_pb.js');
goog.object.extend(proto, fintech_code_pb);
var fintech_status_pb = require('./status_pb.js');
goog.object.extend(proto, fintech_status_pb);
goog.exportSymbol('proto.fintech.AddFriendRequest', null, global);
goog.exportSymbol('proto.fintech.AddFriendResponse', null, global);
goog.exportSymbol('proto.fintech.AddFriendResponse.Data', null, global);
goog.exportSymbol('proto.fintech.GetFriendListRequest', null, global);
goog.exportSymbol('proto.fintech.GetFriendListResponse', null, global);
goog.exportSymbol('proto.fintech.GetFriendListResponse.Data', null, global);
goog.exportSymbol('proto.fintech.ResetUnseenRequest', null, global);
goog.exportSymbol('proto.fintech.ResetUnseenResponse', null, global);
goog.exportSymbol('proto.fintech.UserInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.UserInfo = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.UserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.UserInfo.displayName = 'proto.fintech.UserInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.AddFriendRequest = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.AddFriendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.AddFriendRequest.displayName = 'proto.fintech.AddFriendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.AddFriendResponse = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.AddFriendResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.AddFriendResponse.displayName = 'proto.fintech.AddFriendResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.AddFriendResponse.Data = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.AddFriendResponse.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.AddFriendResponse.Data.displayName = 'proto.fintech.AddFriendResponse.Data';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.ResetUnseenRequest = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.ResetUnseenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.ResetUnseenRequest.displayName = 'proto.fintech.ResetUnseenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.ResetUnseenResponse = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.ResetUnseenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.ResetUnseenResponse.displayName = 'proto.fintech.ResetUnseenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.GetFriendListRequest = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.GetFriendListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.GetFriendListRequest.displayName = 'proto.fintech.GetFriendListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.GetFriendListResponse = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.GetFriendListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.GetFriendListResponse.displayName = 'proto.fintech.GetFriendListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.GetFriendListResponse.Data = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, proto.fintech.GetFriendListResponse.Data.repeatedFields_, null);
};
goog.inherits(proto.fintech.GetFriendListResponse.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.GetFriendListResponse.Data.displayName = 'proto.fintech.GetFriendListResponse.Data';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.UserInfo.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.UserInfo.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.UserInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.UserInfo.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				userId: jspb.Message.getFieldWithDefault(msg, 1, ''),
				name: jspb.Message.getFieldWithDefault(msg, 2, ''),
				unreadMessages: jspb.Message.getFieldWithDefault(msg, 3, 0),
				lastMessage: jspb.Message.getFieldWithDefault(msg, 4, ''),
				isOnline: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.UserInfo}
 */
proto.fintech.UserInfo.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.UserInfo();
	return proto.fintech.UserInfo.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.UserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.UserInfo}
 */
proto.fintech.UserInfo.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value /** @type {string} */ = reader.readString();
				msg.setUserId(value);
				break;
			case 2:
				var value /** @type {string} */ = reader.readString();
				msg.setName(value);
				break;
			case 3:
				var value /** @type {number} */ = reader.readInt32();
				msg.setUnreadMessages(value);
				break;
			case 4:
				var value /** @type {string} */ = reader.readString();
				msg.setLastMessage(value);
				break;
			case 5:
				var value /** @type {boolean} */ = reader.readBool();
				msg.setIsOnline(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.UserInfo.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.UserInfo.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.UserInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.UserInfo.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getUserId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
	f = message.getName();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
	f = message.getUnreadMessages();
	if (f !== 0) {
		writer.writeInt32(3, f);
	}
	f = message.getLastMessage();
	if (f.length > 0) {
		writer.writeString(4, f);
	}
	f = message.getIsOnline();
	if (f) {
		writer.writeBool(5, f);
	}
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.fintech.UserInfo.prototype.getUserId = function() {
	return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, '');
};

/**
 * @param {string} value
 * @return {!proto.fintech.UserInfo} returns this
 */
proto.fintech.UserInfo.prototype.setUserId = function(value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string name = 2;
 * @return {string}
 */
proto.fintech.UserInfo.prototype.getName = function() {
	return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 2, '');
};

/**
 * @param {string} value
 * @return {!proto.fintech.UserInfo} returns this
 */
proto.fintech.UserInfo.prototype.setName = function(value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional int32 unread_messages = 3;
 * @return {number}
 */
proto.fintech.UserInfo.prototype.getUnreadMessages = function() {
	return /** @type {number} */ jspb.Message.getFieldWithDefault(this, 3, 0);
};

/**
 * @param {number} value
 * @return {!proto.fintech.UserInfo} returns this
 */
proto.fintech.UserInfo.prototype.setUnreadMessages = function(value) {
	return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional string last_message = 4;
 * @return {string}
 */
proto.fintech.UserInfo.prototype.getLastMessage = function() {
	return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 4, '');
};

/**
 * @param {string} value
 * @return {!proto.fintech.UserInfo} returns this
 */
proto.fintech.UserInfo.prototype.setLastMessage = function(value) {
	return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional bool is_online = 5;
 * @return {boolean}
 */
proto.fintech.UserInfo.prototype.getIsOnline = function() {
	return /** @type {boolean} */ jspb.Message.getBooleanFieldWithDefault(this, 5, false);
};

/**
 * @param {boolean} value
 * @return {!proto.fintech.UserInfo} returns this
 */
proto.fintech.UserInfo.prototype.setIsOnline = function(value) {
	return jspb.Message.setProto3BooleanField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.AddFriendRequest.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.AddFriendRequest.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.AddFriendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.AddFriendRequest.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				userId: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.AddFriendRequest}
 */
proto.fintech.AddFriendRequest.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.AddFriendRequest();
	return proto.fintech.AddFriendRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.AddFriendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.AddFriendRequest}
 */
proto.fintech.AddFriendRequest.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value /** @type {string} */ = reader.readString();
				msg.setUserId(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.AddFriendRequest.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.AddFriendRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.AddFriendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.AddFriendRequest.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getUserId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.fintech.AddFriendRequest.prototype.getUserId = function() {
	return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, '');
};

/**
 * @param {string} value
 * @return {!proto.fintech.AddFriendRequest} returns this
 */
proto.fintech.AddFriendRequest.prototype.setUserId = function(value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.AddFriendResponse.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.AddFriendResponse.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.AddFriendResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.AddFriendResponse.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				data: (f = msg.getData()) && proto.fintech.AddFriendResponse.Data.toObject(includeInstance, f),
				status: (f = msg.getStatus()) && fintech_status_pb.Status.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.AddFriendResponse}
 */
proto.fintech.AddFriendResponse.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.AddFriendResponse();
	return proto.fintech.AddFriendResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.AddFriendResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.AddFriendResponse}
 */
proto.fintech.AddFriendResponse.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.fintech.AddFriendResponse.Data();
				reader.readMessage(value, proto.fintech.AddFriendResponse.Data.deserializeBinaryFromReader);
				msg.setData(value);
				break;
			case 2:
				var value = new fintech_status_pb.Status();
				reader.readMessage(value, fintech_status_pb.Status.deserializeBinaryFromReader);
				msg.setStatus(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.AddFriendResponse.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.AddFriendResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.AddFriendResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.AddFriendResponse.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getData();
	if (f != null) {
		writer.writeMessage(1, f, proto.fintech.AddFriendResponse.Data.serializeBinaryToWriter);
	}
	f = message.getStatus();
	if (f != null) {
		writer.writeMessage(2, f, fintech_status_pb.Status.serializeBinaryToWriter);
	}
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.AddFriendResponse.Data.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.AddFriendResponse.Data.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.AddFriendResponse.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.AddFriendResponse.Data.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				user: (f = msg.getUser()) && proto.fintech.UserInfo.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.AddFriendResponse.Data}
 */
proto.fintech.AddFriendResponse.Data.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.AddFriendResponse.Data();
	return proto.fintech.AddFriendResponse.Data.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.AddFriendResponse.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.AddFriendResponse.Data}
 */
proto.fintech.AddFriendResponse.Data.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.fintech.UserInfo();
				reader.readMessage(value, proto.fintech.UserInfo.deserializeBinaryFromReader);
				msg.setUser(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.AddFriendResponse.Data.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.AddFriendResponse.Data.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.AddFriendResponse.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.AddFriendResponse.Data.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getUser();
	if (f != null) {
		writer.writeMessage(1, f, proto.fintech.UserInfo.serializeBinaryToWriter);
	}
};

/**
 * optional UserInfo user = 1;
 * @return {?proto.fintech.UserInfo}
 */
proto.fintech.AddFriendResponse.Data.prototype.getUser = function() {
	return /** @type{?proto.fintech.UserInfo} */ jspb.Message.getWrapperField(this, proto.fintech.UserInfo, 1);
};

/**
 * @param {?proto.fintech.UserInfo|undefined} value
 * @return {!proto.fintech.AddFriendResponse.Data} returns this
*/
proto.fintech.AddFriendResponse.Data.prototype.setUser = function(value) {
	return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fintech.AddFriendResponse.Data} returns this
 */
proto.fintech.AddFriendResponse.Data.prototype.clearUser = function() {
	return this.setUser(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintech.AddFriendResponse.Data.prototype.hasUser = function() {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional Data data = 1;
 * @return {?proto.fintech.AddFriendResponse.Data}
 */
proto.fintech.AddFriendResponse.prototype.getData = function() {
	return /** @type{?proto.fintech.AddFriendResponse.Data} */ jspb.Message.getWrapperField(
		this,
		proto.fintech.AddFriendResponse.Data,
		1
	);
};

/**
 * @param {?proto.fintech.AddFriendResponse.Data|undefined} value
 * @return {!proto.fintech.AddFriendResponse} returns this
*/
proto.fintech.AddFriendResponse.prototype.setData = function(value) {
	return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fintech.AddFriendResponse} returns this
 */
proto.fintech.AddFriendResponse.prototype.clearData = function() {
	return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintech.AddFriendResponse.prototype.hasData = function() {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional Status status = 2;
 * @return {?proto.fintech.Status}
 */
proto.fintech.AddFriendResponse.prototype.getStatus = function() {
	return /** @type{?proto.fintech.Status} */ jspb.Message.getWrapperField(this, fintech_status_pb.Status, 2);
};

/**
 * @param {?proto.fintech.Status|undefined} value
 * @return {!proto.fintech.AddFriendResponse} returns this
*/
proto.fintech.AddFriendResponse.prototype.setStatus = function(value) {
	return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fintech.AddFriendResponse} returns this
 */
proto.fintech.AddFriendResponse.prototype.clearStatus = function() {
	return this.setStatus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintech.AddFriendResponse.prototype.hasStatus = function() {
	return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.ResetUnseenRequest.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.ResetUnseenRequest.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.ResetUnseenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.ResetUnseenRequest.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				userId: jspb.Message.getFieldWithDefault(msg, 1, '')
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.ResetUnseenRequest}
 */
proto.fintech.ResetUnseenRequest.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.ResetUnseenRequest();
	return proto.fintech.ResetUnseenRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.ResetUnseenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.ResetUnseenRequest}
 */
proto.fintech.ResetUnseenRequest.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value /** @type {string} */ = reader.readString();
				msg.setUserId(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.ResetUnseenRequest.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.ResetUnseenRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.ResetUnseenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.ResetUnseenRequest.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getUserId();
	if (f.length > 0) {
		writer.writeString(1, f);
	}
};

/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.fintech.ResetUnseenRequest.prototype.getUserId = function() {
	return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 1, '');
};

/**
 * @param {string} value
 * @return {!proto.fintech.ResetUnseenRequest} returns this
 */
proto.fintech.ResetUnseenRequest.prototype.setUserId = function(value) {
	return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.ResetUnseenResponse.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.ResetUnseenResponse.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.ResetUnseenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.ResetUnseenResponse.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				status: (f = msg.getStatus()) && fintech_status_pb.Status.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.ResetUnseenResponse}
 */
proto.fintech.ResetUnseenResponse.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.ResetUnseenResponse();
	return proto.fintech.ResetUnseenResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.ResetUnseenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.ResetUnseenResponse}
 */
proto.fintech.ResetUnseenResponse.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new fintech_status_pb.Status();
				reader.readMessage(value, fintech_status_pb.Status.deserializeBinaryFromReader);
				msg.setStatus(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.ResetUnseenResponse.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.ResetUnseenResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.ResetUnseenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.ResetUnseenResponse.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getStatus();
	if (f != null) {
		writer.writeMessage(1, f, fintech_status_pb.Status.serializeBinaryToWriter);
	}
};

/**
 * optional Status status = 1;
 * @return {?proto.fintech.Status}
 */
proto.fintech.ResetUnseenResponse.prototype.getStatus = function() {
	return /** @type{?proto.fintech.Status} */ jspb.Message.getWrapperField(this, fintech_status_pb.Status, 1);
};

/**
 * @param {?proto.fintech.Status|undefined} value
 * @return {!proto.fintech.ResetUnseenResponse} returns this
*/
proto.fintech.ResetUnseenResponse.prototype.setStatus = function(value) {
	return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fintech.ResetUnseenResponse} returns this
 */
proto.fintech.ResetUnseenResponse.prototype.clearStatus = function() {
	return this.setStatus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintech.ResetUnseenResponse.prototype.hasStatus = function() {
	return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.GetFriendListRequest.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.GetFriendListRequest.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.GetFriendListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.GetFriendListRequest.toObject = function(includeInstance, msg) {
		var f,
			obj = {};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.GetFriendListRequest}
 */
proto.fintech.GetFriendListRequest.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.GetFriendListRequest();
	return proto.fintech.GetFriendListRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.GetFriendListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.GetFriendListRequest}
 */
proto.fintech.GetFriendListRequest.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.GetFriendListRequest.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.GetFriendListRequest.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.GetFriendListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.GetFriendListRequest.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.GetFriendListResponse.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.GetFriendListResponse.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.GetFriendListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.GetFriendListResponse.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				data: (f = msg.getData()) && proto.fintech.GetFriendListResponse.Data.toObject(includeInstance, f),
				status: (f = msg.getStatus()) && fintech_status_pb.Status.toObject(includeInstance, f)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.GetFriendListResponse}
 */
proto.fintech.GetFriendListResponse.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.GetFriendListResponse();
	return proto.fintech.GetFriendListResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.GetFriendListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.GetFriendListResponse}
 */
proto.fintech.GetFriendListResponse.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.fintech.GetFriendListResponse.Data();
				reader.readMessage(value, proto.fintech.GetFriendListResponse.Data.deserializeBinaryFromReader);
				msg.setData(value);
				break;
			case 2:
				var value = new fintech_status_pb.Status();
				reader.readMessage(value, fintech_status_pb.Status.deserializeBinaryFromReader);
				msg.setStatus(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.GetFriendListResponse.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.GetFriendListResponse.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.GetFriendListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.GetFriendListResponse.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getData();
	if (f != null) {
		writer.writeMessage(1, f, proto.fintech.GetFriendListResponse.Data.serializeBinaryToWriter);
	}
	f = message.getStatus();
	if (f != null) {
		writer.writeMessage(2, f, fintech_status_pb.Status.serializeBinaryToWriter);
	}
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.fintech.GetFriendListResponse.Data.repeatedFields_ = [ 1 ];

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.GetFriendListResponse.Data.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.GetFriendListResponse.Data.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.GetFriendListResponse.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.GetFriendListResponse.Data.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				itemsList: jspb.Message.toObjectList(
					msg.getItemsList(),
					proto.fintech.UserInfo.toObject,
					includeInstance
				)
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.GetFriendListResponse.Data}
 */
proto.fintech.GetFriendListResponse.Data.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.GetFriendListResponse.Data();
	return proto.fintech.GetFriendListResponse.Data.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.GetFriendListResponse.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.GetFriendListResponse.Data}
 */
proto.fintech.GetFriendListResponse.Data.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value = new proto.fintech.UserInfo();
				reader.readMessage(value, proto.fintech.UserInfo.deserializeBinaryFromReader);
				msg.addItems(value);
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.GetFriendListResponse.Data.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.GetFriendListResponse.Data.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.GetFriendListResponse.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.GetFriendListResponse.Data.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getItemsList();
	if (f.length > 0) {
		writer.writeRepeatedMessage(1, f, proto.fintech.UserInfo.serializeBinaryToWriter);
	}
};

/**
 * repeated UserInfo items = 1;
 * @return {!Array<!proto.fintech.UserInfo>}
 */
proto.fintech.GetFriendListResponse.Data.prototype.getItemsList = function() {
	return /** @type{!Array<!proto.fintech.UserInfo>} */ jspb.Message.getRepeatedWrapperField(
		this,
		proto.fintech.UserInfo,
		1
	);
};

/**
 * @param {!Array<!proto.fintech.UserInfo>} value
 * @return {!proto.fintech.GetFriendListResponse.Data} returns this
*/
proto.fintech.GetFriendListResponse.Data.prototype.setItemsList = function(value) {
	return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.fintech.UserInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.fintech.UserInfo}
 */
proto.fintech.GetFriendListResponse.Data.prototype.addItems = function(opt_value, opt_index) {
	return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.fintech.UserInfo, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.fintech.GetFriendListResponse.Data} returns this
 */
proto.fintech.GetFriendListResponse.Data.prototype.clearItemsList = function() {
	return this.setItemsList([]);
};

/**
 * optional Data data = 1;
 * @return {?proto.fintech.GetFriendListResponse.Data}
 */
proto.fintech.GetFriendListResponse.prototype.getData = function() {
	return /** @type{?proto.fintech.GetFriendListResponse.Data} */ jspb.Message.getWrapperField(
		this,
		proto.fintech.GetFriendListResponse.Data,
		1
	);
};

/**
 * @param {?proto.fintech.GetFriendListResponse.Data|undefined} value
 * @return {!proto.fintech.GetFriendListResponse} returns this
*/
proto.fintech.GetFriendListResponse.prototype.setData = function(value) {
	return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fintech.GetFriendListResponse} returns this
 */
proto.fintech.GetFriendListResponse.prototype.clearData = function() {
	return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintech.GetFriendListResponse.prototype.hasData = function() {
	return jspb.Message.getField(this, 1) != null;
};

/**
 * optional Status status = 2;
 * @return {?proto.fintech.Status}
 */
proto.fintech.GetFriendListResponse.prototype.getStatus = function() {
	return /** @type{?proto.fintech.Status} */ jspb.Message.getWrapperField(this, fintech_status_pb.Status, 2);
};

/**
 * @param {?proto.fintech.Status|undefined} value
 * @return {!proto.fintech.GetFriendListResponse} returns this
*/
proto.fintech.GetFriendListResponse.prototype.setStatus = function(value) {
	return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.fintech.GetFriendListResponse} returns this
 */
proto.fintech.GetFriendListResponse.prototype.clearStatus = function() {
	return this.setStatus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fintech.GetFriendListResponse.prototype.hasStatus = function() {
	return jspb.Message.getField(this, 2) != null;
};

goog.object.extend(exports, proto.fintech);
