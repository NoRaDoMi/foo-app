// source: status.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var fintech_code_pb = require('./code_pb.js');
goog.object.extend(proto, fintech_code_pb);
goog.exportSymbol('proto.fintech.Status', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fintech.Status = function(opt_data) {
	jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fintech.Status, jspb.Message);
if (goog.DEBUG && !COMPILED) {
	/**
   * @public
   * @override
   */
	proto.fintech.Status.displayName = 'proto.fintech.Status';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
	/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
	proto.fintech.Status.prototype.toObject = function(opt_includeInstance) {
		return proto.fintech.Status.toObject(opt_includeInstance, this);
	};

	/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fintech.Status} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
	proto.fintech.Status.toObject = function(includeInstance, msg) {
		var f,
			obj = {
				code: jspb.Message.getFieldWithDefault(msg, 1, 0),
				message: jspb.Message.getFieldWithDefault(msg, 2, ''),
				extraMap: (f = msg.getExtraMap()) ? f.toObject(includeInstance, undefined) : []
			};

		if (includeInstance) {
			obj.$jspbMessageInstance = msg;
		}
		return obj;
	};
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fintech.Status}
 */
proto.fintech.Status.deserializeBinary = function(bytes) {
	var reader = new jspb.BinaryReader(bytes);
	var msg = new proto.fintech.Status();
	return proto.fintech.Status.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fintech.Status} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fintech.Status}
 */
proto.fintech.Status.deserializeBinaryFromReader = function(msg, reader) {
	while (reader.nextField()) {
		if (reader.isEndGroup()) {
			break;
		}
		var field = reader.getFieldNumber();
		switch (field) {
			case 1:
				var value /** @type {!proto.fintech.Code} */ = reader.readEnum();
				msg.setCode(value);
				break;
			case 2:
				var value /** @type {string} */ = reader.readString();
				msg.setMessage(value);
				break;
			case 3:
				var value = msg.getExtraMap();
				reader.readMessage(value, function(message, reader) {
					jspb.Map.deserializeBinary(
						message,
						reader,
						jspb.BinaryReader.prototype.readString,
						jspb.BinaryReader.prototype.readString,
						null,
						'',
						''
					);
				});
				break;
			default:
				reader.skipField();
				break;
		}
	}
	return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fintech.Status.prototype.serializeBinary = function() {
	var writer = new jspb.BinaryWriter();
	proto.fintech.Status.serializeBinaryToWriter(this, writer);
	return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fintech.Status} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fintech.Status.serializeBinaryToWriter = function(message, writer) {
	var f = undefined;
	f = message.getCode();
	if (f !== 0.0) {
		writer.writeEnum(1, f);
	}
	f = message.getMessage();
	if (f.length > 0) {
		writer.writeString(2, f);
	}
	f = message.getExtraMap(true);
	if (f && f.getLength() > 0) {
		f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
	}
};

/**
 * optional Code code = 1;
 * @return {!proto.fintech.Code}
 */
proto.fintech.Status.prototype.getCode = function() {
	return /** @type {!proto.fintech.Code} */ jspb.Message.getFieldWithDefault(this, 1, 0);
};

/**
 * @param {!proto.fintech.Code} value
 * @return {!proto.fintech.Status} returns this
 */
proto.fintech.Status.prototype.setCode = function(value) {
	return jspb.Message.setProto3EnumField(this, 1, value);
};

/**
 * optional string message = 2;
 * @return {string}
 */
proto.fintech.Status.prototype.getMessage = function() {
	return /** @type {string} */ jspb.Message.getFieldWithDefault(this, 2, '');
};

/**
 * @param {string} value
 * @return {!proto.fintech.Status} returns this
 */
proto.fintech.Status.prototype.setMessage = function(value) {
	return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * map<string, string> extra = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.fintech.Status.prototype.getExtraMap = function(opt_noLazyCreate) {
	return /** @type {!jspb.Map<string,string>} */ jspb.Message.getMapField(this, 3, opt_noLazyCreate, null);
};

/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.fintech.Status} returns this
 */
proto.fintech.Status.prototype.clearExtraMap = function() {
	this.getExtraMap().clear();
	return this;
};

goog.object.extend(exports, proto.fintech);
